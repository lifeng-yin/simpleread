{"version":3,"file":"static/js/831.faf150bf.chunk.js","mappings":"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","sources":["components/signin/Field/Field.js","components/signin/SignUpForm/SignUpForm.js","components/signin/SignInForm/SignInForm.js","pages/SignIn/SignIn.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Field.scss';\n\nconst Field = (props) => (\n  <div className=\"form-group\">\n        <label htmlFor={props.name.toString().toLowerCase()}>{props.name || props.label}</label>\n        <input\n        className=\"form-control\"\n        // id={props.name.toString().toLowerCase()}\n        value={props.form[props.name.toString().toLowerCase()]}\n        type={props.type || \"text\"}\n        required\n        onChange={(e) => props.onChange(e, props.updateForm, props.name.toString().toLowerCase())}\n        />\n    </div>\n);\n\nField.propTypes = {\n    name: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    updateForm: PropTypes.func.isRequired,\n    form: PropTypes.object.isRequired,\n    type: PropTypes.string,\n    label: PropTypes.string\n};\n\nField.defaultProps = {};\n\nexport default Field;\n","import React from 'react';\nimport { create, useForm } from \"../../../utilities/database.js\"\nimport Field from \"../Field/Field.js\";\nimport PropTypes from 'prop-types';\nimport './SignUpForm.scss';\n\nconst SignUpForm = (props) => {\n    const [form, setForm, updateForm] = useForm({\n        email: \"\",\n        username: \"\",\n        password: \"\"\n    })\n    \n  return (\n    <form className=\"SignUpForm\" data-testid=\"SignUpForm\" onSubmit={(e) => props.onSubmit(e, form, setForm)}>\n        <Field name=\"Username\" form={form} onChange={props.onChange} updateForm={updateForm}/>\n        <Field name=\"Email\" form={form} onChange={props.onChange} updateForm={updateForm} type=\"email\"/>\n        <Field name=\"Password\" form={form} onChange={props.onChange} updateForm={updateForm} type=\"password\"/>\n        \n        <div className=\"form-group\">\n            <input\n            type=\"submit\"\n            value=\"Sign Up\"\n            className=\"btn btn-primary\"\n            />\n        </div>\n    </form>\n);}\n\nSignUpForm.propTypes = {\n    onSubmit: PropTypes.func,\n    onChange: PropTypes.func\n};\n\nSignUpForm.defaultProps = {\n    onSubmit: (e, form, setForm) => create(form, \"/user\"),\n    onChange: (e, updateForm, field) => {\n        let obj = {}\n        obj[field] = e.target.value\n        updateForm(obj)\n    }\n};\n\nexport default SignUpForm;\n","import React from 'react';\nimport { create, useForm } from \"../../../utilities/database.js\"\nimport Field from \"../Field/Field.js\";\nimport PropTypes from 'prop-types';\nimport './SignInForm.scss';\n\nconst SignInForm = (props) => {\n    const [form, setForm, updateForm] = useForm({\n        username: \"\",\n        password: \"\"\n    })\n    \n  return (\n    <form className=\"SignInForm\" data-testid=\"SignInForm\" onSubmit={(e) => props.onSubmit(e, form, setForm)}>\n        <Field name=\"Username\" label=\"Username or email\" form={form} onChange={props.onChange} updateForm={updateForm}/>\n        <Field name=\"Password\" form={form} onChange={props.onChange} updateForm={updateForm} type=\"password\"/>\n        \n        <div className=\"form-group\">\n            <input\n            type=\"submit\"\n            value=\"Sign In\"\n            className=\"btn btn-primary\"\n            />\n        </div>\n    </form>\n);}\n\nSignInForm.propTypes = {\n    onSubmit: PropTypes.func,\n    onChange: PropTypes.func\n};\n\nSignInForm.defaultProps = {\n    onSubmit: (e, form, setForm) => create(form, \"/user\"),\n    onChange: (e, updateForm, field) => {\n        let obj = {}\n        obj[field] = e.target.value\n        updateForm(obj)\n    }\n};\n\nexport default SignInForm;\n","import React, {useContext} from 'react';\nimport SignUpForm from \"../../components/signin/SignUpForm/SignUpForm.js\";\nimport SignInForm from \"../../components/signin/SignInForm/SignInForm\"\nimport {create} from \"../../utilities/database.js\";\nimport TokenContext from \"../../components/signin/TokenContext/TokenContext\"\nimport {useNavigate} from \"react-router\"\nimport './SignIn.scss';\n\nconst SignIn = () => {\n    const navigate = useNavigate()\n    const {setToken} = useContext(TokenContext)\n    \n    return <div>\n        <h3>Create a new account</h3>\n        <SignUpForm \n                onSubmit={(e, form, setForm) => {\n                    e.preventDefault();\n                    create(form, \"/user/register\")\n                    setForm({ email: \"\", username: \"\", password: \"\" });\n                    navigate(\"/simpleread/\");}\n                }\n                onChange={(e, updateForm, field) => {\n                    let obj = {}\n                    obj[field] = e.target.value\n                    updateForm(obj)\n                }}\n            />\n        <SignInForm \n                onSubmit={(e, form, setForm) => {\n                    e.preventDefault();\n                    create(form, \"/user/login\", \"include\").then(res => {\n                        if (res.isLoggedIn) {\n                            setToken(res?.token)\n                        }\n                    })\n                    setForm({ username: \"\", password: \"\" });\n                    navigate(\"/simpleread/\");}\n                }\n                onChange={(e, updateForm, field) => {\n                    let obj = {}\n                    obj[field] = e.target.value\n                    updateForm(obj)\n                }}\n            />\n</div>};\n\nexport default SignIn;\n"],"names":["Field","props","className","htmlFor","name","toString","toLowerCase","label","value","form","type","required","onChange","e","updateForm","defaultProps","SignUpForm","useForm","email","username","password","setForm","onSubmit","create","field","obj","target","SignInForm","navigate","useNavigate","setToken","useContext","TokenContext","preventDefault","then","res","isLoggedIn","token"],"sourceRoot":""}