{"version":3,"file":"static/js/822.90a0d8c3.chunk.js","mappings":"2KAIMA,EAAQ,SAACC,GAAD,OACZ,iBAAKC,UAAU,mBAAf,WAEE,0BACEA,UAAU,eAEVC,MAAOF,EAAMG,KAAKH,EAAMI,KAAKC,WAAWC,eACxCC,KAAMP,EAAMO,MAAQ,OACpBC,UAAQ,EACRC,SAAU,SAACC,GAAD,OACRV,EAAMS,SAASC,EAAGV,EAAMW,WAAYX,EAAMI,KAAKC,WAAWC,cADlD,EAGVM,YAAaZ,EAAMI,MAAQJ,EAAMa,OAC7Bb,EAAMc,QAEXd,EAAMe,WAfG,EA6BdhB,EAAMiB,aAAe,CAAC,EAEtB,O,uJC5BMC,EAAgB,SAACjB,GACrB,OAAoCkB,EAAAA,EAAAA,IAAQ,CAC1CC,SAAU,GACVC,OAAQ,GACRC,OAAQ,IAHV,eAAOlB,EAAP,KAAamB,EAAb,KAAsBX,EAAtB,KAKQY,GAASC,EAAAA,EAAAA,YAAWC,EAAAA,GAApBF,KAER,OACE,kBACEtB,UAAU,gBACV,cAAY,gBACZyB,SAAU,SAAChB,GAAD,OAAOV,EAAM0B,SAAShB,EAAGP,EAAMmB,EAA/B,EAHZ,WAKE,+CACA,SAACvB,EAAA,EAAD,CACEK,KAAK,WACLS,MAAM,YACNV,KAAMA,EACNM,SAAUT,EAAMS,SAChBE,WAAYA,KAEd,SAACZ,EAAA,EAAD,CACEK,KAAK,SACLD,KAAMA,EACNM,SAAUT,EAAMS,SAChBE,WAAYA,KAEd,SAACZ,EAAA,EAAD,CACEK,KAAK,SACLD,KAAMA,EACNM,SAAUT,EAAMS,SAChBE,WAAYA,EACZJ,KAAK,QACLO,MAAO,CACLa,IAAK,IACLC,IAAK,IACLC,KAAM,OATV,UAYE,cAAG5B,UAAU,eAAb,SAA6BE,EAAKkB,YAGpC,gBAAKpB,UAAU,iBAAf,UACE,kBACEM,KAAK,SACLL,MAAM,gBACND,UAAU,kBACV6B,UAAUP,QAKnB,EAODN,EAAcD,aAAe,CAC3BU,SAAU,SAAChB,EAAGP,EAAMmB,GAAV,OAAsBS,EAAAA,EAAAA,IAAO5B,EAAM,QAAnC,EACVM,SAAU,SAACC,EAAGC,EAAYqB,GACxB,IAAIC,EAAM,CAAC,EACXA,EAAID,GAAStB,EAAEwB,OAAOhC,MACtBS,EAAWsB,EACZ,GAGH,QCrEe,SAASE,IACtB,IAEIC,EAFJ,GAAwBZ,EAAAA,EAAAA,YAAWC,EAAAA,GAA3BY,EAAR,EAAQA,MAAOd,EAAf,EAAeA,KACTe,GAAWC,EAAAA,EAAAA,MAKjB,OAHAC,EAAAA,EAAAA,MAAWC,MAAK,SAAC/B,GACf0B,EAAc1B,CACf,KAEC,yBACG2B,GACC,SAAC,EAAD,CACEX,SAAU,SAAChB,EAAGP,EAAMmB,GAClBZ,EAAEgC,iBACFN,EAAY,eAAD,QAAC,UACPjC,GACA,CAAEwC,SAAUpB,EAAKoB,YAEtBrB,EAAQ,CAAEH,SAAU,GAAIC,OAAQ,GAAIC,OAAQ,IAC5CiB,EAAS,eACV,EACD7B,SAAU,SAACC,EAAGC,EAAYqB,GACxB,IAAIC,EAAM,CAAC,EACXA,EAAID,GAAStB,EAAEwB,OAAOhC,MACtBS,EAAWsB,EACZ,KAGH,iDAIP,C","sources":["components/signin/Field/Field.js","components/reviews/AddReviewForm/AddReviewForm.js","pages/AddReview/AddReview.js"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Field.scss\";\n\nconst Field = (props) => (\n  <div className=\"form-group Field\">\n    {/* <label htmlFor={props.name.toString().toLowerCase()}>{props.name || props.label}</label> */}\n    <input\n      className=\"form-control\"\n      // id={props.name.toString().toLowerCase()}\n      value={props.form[props.name.toString().toLowerCase()]}\n      type={props.type || \"text\"}\n      required\n      onChange={(e) =>\n        props.onChange(e, props.updateForm, props.name.toString().toLowerCase())\n      }\n      placeholder={props.name || props.label}\n      {...props.extra}\n    />\n    {props.children}\n  </div>\n);\n\nField.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  updateForm: PropTypes.func.isRequired,\n  form: PropTypes.object.isRequired,\n  type: PropTypes.string,\n  label: PropTypes.string,\n  extra: PropTypes.object,\n};\n\nField.defaultProps = {};\n\nexport default Field;\n","import React, { useContext } from \"react\";\nimport { create, useForm } from \"../../../utilities/database.js\";\nimport Field from \"../../signin/Field/Field.js\";\nimport PropTypes from \"prop-types\";\nimport TokenContext from \"../../signin/TokenContext/TokenContext.js\";\nimport \"../../signin/SignInForm/SignInForm.scss\";\n\nconst AddReviewForm = (props) => {\n  const [form, setForm, updateForm] = useForm({\n    bookname: \"\",\n    review: \"\",\n    rating: 0,\n  });\n  const { user } = useContext(TokenContext);\n\n  return (\n    <form\n      className=\"AddReviewForm\"\n      data-testid=\"AddReviewForm\"\n      onSubmit={(e) => props.onSubmit(e, form, setForm)}\n    >\n      <h3>Create New Record</h3>\n      <Field\n        name=\"Bookname\"\n        label=\"Book name\"\n        form={form}\n        onChange={props.onChange}\n        updateForm={updateForm}\n      />\n      <Field\n        name=\"Review\"\n        form={form}\n        onChange={props.onChange}\n        updateForm={updateForm}\n      />\n      <Field\n        name=\"Rating\"\n        form={form}\n        onChange={props.onChange}\n        updateForm={updateForm}\n        type=\"range\"\n        extra={{\n          max: \"5\",\n          min: \"0\",\n          step: \"0.5\",\n        }}\n      >\n        <p className=\"rating-value\">{form.rating}</p>\n      </Field>\n\n      <div className=\"form-group cta\">\n        <input\n          type=\"submit\"\n          value=\"Submit Review\"\n          className=\"btn btn-primary\"\n          disabled={user ? false : true}\n        />\n      </div>\n    </form>\n  );\n};\n\nAddReviewForm.propTypes = {\n  onSubmit: PropTypes.func,\n  onChange: PropTypes.func,\n};\n\nAddReviewForm.defaultProps = {\n  onSubmit: (e, form, setForm) => create(form, \"/user\"),\n  onChange: (e, updateForm, field) => {\n    let obj = {};\n    obj[field] = e.target.value;\n    updateForm(obj);\n  },\n};\n\nexport default AddReviewForm;\n","import React, { useContext } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { useFetch } from \"../../utilities/database.js\";\nimport TokenContext from \"../../components/signin/TokenContext/TokenContext.js\";\nimport AddReviewForm from \"../../components/reviews/AddReviewForm/AddReviewForm.js\";\nimport \"./AddReview.scss\";\n\nexport default function Create() {\n  const { token, user } = useContext(TokenContext);\n  const navigate = useNavigate();\n  let secureFetch;\n  useFetch().then((e) => {\n    secureFetch = e;\n  });\n  return (\n    <div>\n      {token ? (\n        <AddReviewForm\n          onSubmit={(e, form, setForm) => {\n            e.preventDefault();\n            secureFetch(\"/review/add\", {\n              ...form,\n              ...{ username: user.username },\n            });\n            setForm({ bookname: \"\", review: \"\", rating: 0 });\n            navigate(\"/simpleread/\");\n          }}\n          onChange={(e, updateForm, field) => {\n            let obj = {};\n            obj[field] = e.target.value;\n            updateForm(obj);\n          }}\n        />\n      ) : (\n        <p>have an account nerd</p>\n      )}\n    </div>\n  );\n}\n"],"names":["Field","props","className","value","form","name","toString","toLowerCase","type","required","onChange","e","updateForm","placeholder","label","extra","children","defaultProps","AddReviewForm","useForm","bookname","review","rating","setForm","user","useContext","TokenContext","onSubmit","max","min","step","disabled","create","field","obj","target","Create","secureFetch","token","navigate","useNavigate","useFetch","then","preventDefault","username"],"sourceRoot":""}