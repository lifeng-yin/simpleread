{"version":3,"file":"static/js/751.9b9bf102.chunk.js","mappings":"2NA4HA,EAvHa,WACT,OAAoCA,EAAAA,EAAAA,IAAQ,CACxCC,KAAM,GACNC,SAAU,GACVC,MAAO,GACPC,QAAS,KAJb,eAAOC,EAAP,KAAaC,EAAb,KAAsBC,EAAtB,KAOMC,GAASC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MA6BnB,OA3BEC,EAAAA,EAAAA,YAAU,WAAM,8CACZ,sGACUC,EAAKL,EAAOK,GAAGC,WADzB,SAE2BC,MAAM,GAAD,OAAIC,sCAAJ,mBAA0ER,EAAOK,GAAGC,aAFpH,WAEUG,EAFV,QAIkBC,GAJlB,uBAKcC,EALd,iCAKkDF,EAASG,YACnDC,OAAOC,MAAMH,GANrB,2CAUyBF,EAASM,OAVlC,WAUUC,EAVV,+BAYQH,OAAOC,MAAP,yBAA+BT,EAA/B,eACAH,EAAS,KAbjB,2BAiBIJ,EAAQkB,GAjBZ,6CADY,uBAAC,WAAD,wBAqBZC,EAIH,GAAE,CAACjB,EAAOK,GAAIH,KAGjB,gBAAKgB,UAAU,OAAO,cAAY,OAAlC,UACG,kBAAMC,SAAU,SAACC,GACdA,EAAEC,iBACF,IAAMC,EAAe,CACjB7B,KAAMI,EAAKJ,KACXC,SAAUG,EAAKH,SACfC,MAAOE,EAAKF,QAEhB4B,EAAAA,EAAAA,IAAOD,EAAD,yBAAiCtB,EAAOK,KAC9CH,EAAS,eACX,EATD,WAUE,iBAAKgB,UAAU,aAAf,WACE,kBAAOM,QAAQ,OAAf,mBACA,kBACEC,KAAK,OACLP,UAAU,eACVb,GAAG,OACHqB,MAAO7B,EAAKJ,KACZkC,SAAU,SAACP,GAAD,OAAOrB,EAAW,CAAEN,KAAM2B,EAAEQ,OAAOF,OAAnC,QAGd,iBAAKR,UAAU,aAAf,WACE,kBAAOM,QAAQ,WAAf,uBACA,kBACEC,KAAK,OACLP,UAAU,eACVb,GAAG,WACHqB,MAAO7B,EAAKH,SACZiC,SAAU,SAACP,GAAD,OAAOrB,EAAW,CAAEL,SAAU0B,EAAEQ,OAAOF,OAAvC,QAGd,iBAAKR,UAAU,aAAf,WACE,iBAAKA,UAAU,+BAAf,WACE,kBACEA,UAAU,mBACVO,KAAK,QACLhC,KAAK,kBACLY,GAAG,iBACHqB,MAAM,SACNG,QAAwB,WAAfhC,EAAKF,MACdgC,SAAU,SAACP,GAAD,OAAOrB,EAAW,CAAEJ,MAAOyB,EAAEQ,OAAOF,OAApC,KAEZ,kBAAOF,QAAQ,iBAAiBN,UAAU,mBAA1C,wBAEF,iBAAKA,UAAU,+BAAf,WACE,kBACEA,UAAU,mBACVO,KAAK,QACLhC,KAAK,kBACLY,GAAG,iBACHqB,MAAM,SACNG,QAAwB,WAAfhC,EAAKF,MACdgC,SAAU,SAACP,GAAD,OAAOrB,EAAW,CAAEJ,MAAOyB,EAAEQ,OAAOF,OAApC,KAEZ,kBAAOF,QAAQ,iBAAiBN,UAAU,mBAA1C,wBAEF,iBAAKA,UAAU,+BAAf,WACE,kBACEA,UAAU,mBACVO,KAAK,QACLhC,KAAK,kBACLY,GAAG,iBACHqB,MAAM,SACNG,QAAwB,WAAfhC,EAAKF,MACdgC,SAAU,SAACP,GAAD,OAAOrB,EAAW,CAAEJ,MAAOyB,EAAEQ,OAAOF,OAApC,KAEZ,kBAAOF,QAAQ,iBAAiBN,UAAU,mBAA1C,2BAGJ,gBAAKA,UAAU,aAAf,UACE,kBACEO,KAAK,SACLC,MAAM,cACNR,UAAU,0BAKlB,C","sources":["pages/Edit/Edit.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { useForm, create } from \"../../utilities/database.js\";\nimport { useParams, useNavigate } from \"react-router\";\nimport './Edit.scss';\n\nconst Edit = () => {\n    const [form, setForm, updateForm] = useForm({\n        name: \"\",\n        position: \"\",\n        level: \"\",\n        records: [],\n    })\n    \n    const params = useParams();\n    const navigate = useNavigate();\n \n    useEffect(() => {\n        async function fetchData() {\n            const id = params.id.toString();\n            const response = await fetch(`${process.env.REACT_APP_SERVER_URL || \"http://localhost:5000\"}/review/${params.id.toString()}`);\n        \n            if (!response.ok) {\n                const message = `An error has occurred: ${response.statusText}`;\n                window.alert(message);\n                return;\n            }\n        \n            const record = await response.json();\n                if (!record) {\n                window.alert(`Record with id ${id} not found`);\n                navigate(\"/\");\n                return;\n            }\n        \n            setForm(record);\n        }\n        \n        fetchData();\n        \n        return;\n   // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [params.id, navigate]);\n    \n  return (\n  <div className=\"Edit\" data-testid=\"Edit\">\n     <form onSubmit={(e) => {\n        e.preventDefault();\n        const editedPerson = {\n            name: form.name,\n            position: form.position,\n            level: form.level,\n        };\n        create(editedPerson, `/review/update/${params.id}`)\n        navigate(\"/simpleread/\");\n     }}>\n       <div className=\"form-group\">\n         <label htmlFor=\"name\">Name</label>\n         <input\n           type=\"text\"\n           className=\"form-control\"\n           id=\"name\"\n           value={form.name}\n           onChange={(e) => updateForm({ name: e.target.value })}\n         />\n       </div>\n       <div className=\"form-group\">\n         <label htmlFor=\"position\">Position</label>\n         <input\n           type=\"text\"\n           className=\"form-control\"\n           id=\"position\"\n           value={form.position}\n           onChange={(e) => updateForm({ position: e.target.value })}\n         />\n       </div>\n       <div className=\"form-group\">\n         <div className=\"form-check form-check-inline\">\n           <input\n             className=\"form-check-input\"\n             type=\"radio\"\n             name=\"positionOptions\"\n             id=\"positionIntern\"\n             value=\"Intern\"\n             checked={form.level === \"Intern\"}\n             onChange={(e) => updateForm({ level: e.target.value })}\n           />\n           <label htmlFor=\"positionIntern\" className=\"form-check-label\">Intern</label>\n         </div>\n         <div className=\"form-check form-check-inline\">\n           <input\n             className=\"form-check-input\"\n             type=\"radio\"\n             name=\"positionOptions\"\n             id=\"positionJunior\"\n             value=\"Junior\"\n             checked={form.level === \"Junior\"}\n             onChange={(e) => updateForm({ level: e.target.value })}\n           />\n           <label htmlFor=\"positionJunior\" className=\"form-check-label\">Junior</label>\n         </div>\n         <div className=\"form-check form-check-inline\">\n           <input\n             className=\"form-check-input\"\n             type=\"radio\"\n             name=\"positionOptions\"\n             id=\"positionSenior\"\n             value=\"Senior\"\n             checked={form.level === \"Senior\"}\n             onChange={(e) => updateForm({ level: e.target.value })}\n           />\n           <label htmlFor=\"positionSenior\" className=\"form-check-label\">Senior</label>\n         </div>\n       </div>\n       <div className=\"form-group\">\n         <input\n           type=\"submit\"\n           value=\"Edit person\"\n           className=\"btn btn-primary\"\n         />\n       </div>\n     </form>\n  </div>\n);}\n\nexport default Edit;\n"],"names":["useForm","name","position","level","records","form","setForm","updateForm","params","useParams","navigate","useNavigate","useEffect","id","toString","fetch","process","response","ok","message","statusText","window","alert","json","record","fetchData","className","onSubmit","e","preventDefault","editedPerson","create","htmlFor","type","value","onChange","target","checked"],"sourceRoot":""}